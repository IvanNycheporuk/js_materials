<!--
    Функции-литералы (Function Expression).

    Используй Function declaration, когда хочешь создать функцию в глобальной области видимости и сделать ее доступной в коде. Используй Function expression, чтобы ограничить область, в которой доступна функция, сохранить чистой глобальную область видимости и поддерживать аккуратный синтаксис.
-->

<html>
<head>
    <title>Функции-литералы</title>

    <script type="text/javascript">

// Поднятие или hoisting — это механизм в JavaScript, в котором переменные и объявления функций, передвигаются вверх своей области видимости перед тем, как код будет выполнен. Примеры ниже могут помочь разобраться

// function declaration мы можем вызвать перед тем как мы обьявим саму функцию
        sum(2,4); // функция sum обьявленна ниже, а ее вызов происходит до обьявления - ошибки не будет благодаря механизму поднятия или hoisting

        function sum(a, b) { // function declaration
            document.write(a + b);
            document.write('<br>');
        }

        sum(2, 4);

        document.write("<hr />");


        // function expression мы не можем вызвать перед тем как мы обьявим саму функцию
        multi(2, 4); // тут будет ошибка, так как js еще не знает об этой функции
        // если закомментировать строчку выше то код сработает, так как мы обьявили функцию multi как function expression и после ее обьявления ее вызвали - все ок

        var multi = function (a, b) { // function expression
            document.write(a * b);
        }

        multi(2, 4);

    </script>

</head>
<body>

    <!-- Разметка страници -->

</body>
</html>
